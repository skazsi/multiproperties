#summary Command line usage of handlers

The handlers can be used from command line too. That means you can take any `multiproperties` file as input, then convert one of it's column to the desired output by choosing any of your available handler.

= Preparation =
First of all you need to collect  the _base_ plugin `jar` file of the MultiProperties feature together with the handler plugin `jar` file. Hereinafter the *Java Properties* handler will be used, so finally you need to collect the following `jar` files from your Eclipse installation's `plugin` folder.
 * `hu.skzs.multiproperties.base_X.Y.Z.jar`
 * `hu.skzs.multiproperties.handler.java_X.Y.Z.jar`
Please note that the `X`, `Y` and `Z` means the major, minor and bugfix version numbers.  In the following the `1.1.0` version is used.

If your handler requires some additional `jar` files on the classpath, you need to take care of them too.

= Printing the usage =
Enter the following command to print out the usage.
 <pre>java -classpath hu.skzs.multiproperties.base_1.1.0.jar;hu.skzs.multiproperties.handler.java_1.1.0.jar hu.skzs.multiproperties.base.HandlerExecutor</pre>
It will produce the following output.
<pre>
MultiProperties Handler Executor
Usage:
        <-file MultiPropertiesFilePath> <-columnName ColumnName> [-columnConfig ColumnConfig] <-handlerClass HandlerClass>
or
        -help
Where:
        file         : Path to the MultiProperties file
        columnName   : Name of the column to be used by the handler
        columnConfig : The handler specific configuration to be used
        handlerClass : Fully qualified class name of the handler
        help         : Prints this help out
Example:
        -file c:\file.multiproperties -columnName EN -columnConfig c:\EN.properties|true|true|true -handlerClass hu.skzs.multiproperties.handler.java.JavaHandler

 Note:
If you don't specify the columnConfig paramater, then the column configuration stored in the MultiProperties will be used.
</pre>

= Converting a column =
Enter the following command to convert for example the `file.multiproperties` file's *EN* called column into `EN.properties` file with the *Java Properties* handler.
 <pre>java -classpath hu.skzs.multiproperties.base_1.1.0.jar;hu.skzs.multiproperties.handler.java_1.1.0.jar hu.skzs.multiproperties.base.HandlerExecutor -file file.multiproperties -columnName EN -columnConfig "EN.properties|true|true|true|false" -handlerClass hu.skzs.multiproperties.handler.java.JavaHandler</pre>
It will produce the desired `EN.properties` file. Please see the [#Java_Properties_configuration Java Properties configuration] format to understand the boolean values in the end of the column configuration.

= Java Properties configuration =
If you would like to use the *Java Properties* handler, then most probably you need to know the it's configuration format. It uses the `|` sign as a separator and stores the following values in order.
 # File name of the output properties file (can be fully qualified path).
 # Include MultiProperties description as comment in the beginning of the output properties file. (boolean, only `true` and `false` are valid values)
 # Include the selected column description as comment in the beginning of the output properties file. (boolean, only `true` and `false` are valid values)
 # Include disabled property records as comment. (boolean, only `true` and `false` are valid values)
 # Disable the [Records#Property default values]. (boolean, only `true` and `false` are valid values)
Example:
 `"c:\EN.properties|true|true|true|false"`



= Ant/Maven build process =
TBD